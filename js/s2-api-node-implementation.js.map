{"version":3,"sources":["../ts/s2-api-node-implementation.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,gDAA2D;AAC3D,sDAA8B;AAW9B,MAAa,uBAAwB,SAAQ,cAAK;IAE1C,MAAM,CAAC,GAAG;QAEhB,cAAK,CAAC,wBAAwB,CAC7B,CAAU,aAAyB,EAAE,QAAgB,EAAE,IAAU,EAAE,KAAc,EAA6B,EAAE;YAE/G,OAAO,IAAI,OAAO,CAAmB,CAAC,OAA4C,EAAE,MAAiB,EAAQ,EAAE;gBAE9G,IAAI,IAAI,GAAQ;oBAEf,GAAG,EAAE,QAAQ;oBACb,MAAM,EAAE,aAAa;iBAErB,CAAC;gBAEF,IAAI,IAAI,KAAK,SAAS,EAAE;oBAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBAEjB;gBAED,IAAI,KAAK,KAAK,SAAS;oBAAE,IAAI,CAAC,OAAO,GAAG,EAAE,eAAe,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC;gBAE/E,iBAAO,CAAC,IAAI,EAAE,CAAC,KAAU,EAAE,QAAa,EAAE,IAAS,EAAE,EAAE;oBAEtD,OAAO,CAAC,IAAI,sBAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEvD,CAAC,CAAC,CAAC;YAEJ,CAAC,CAAC,CAAC;QAEJ,CAAC,CAAA,CACD,CAAC;IAEH,CAAC;CAED;AAtCD,0DAsCC","file":"s2-api-node-implementation.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t1:33 PM -- July 13th, 2019.\n *\tProject: @subscribeto/ts-api-node\n */\n\nimport { S2API, S2APIResponse } from \"@subscribeto/ts-api\";\nimport request from \"request\";\n\ntype HTTPMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n\n/**\n * A network request implementation for NodeJS.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class S2APINodeImplementation extends S2API {\n\t\n\tpublic static use(): void {\n\t\t\n\t\tS2API.setNetworkImplementation(\n\t\t\tasync <R>(requestMethod: HTTPMethod, endpoint: string, body?: any, token?: string): Promise<S2APIResponse<R>> => {\n\t\t\t\t\n\t\t\t\treturn new Promise<S2APIResponse<R>>((resolve: (response: S2APIResponse<R>) => any, reject: () => any): void => {\n\t\t\t\t\n\t\t\t\t\tlet opts: any = {\n\t\t\t\t\t\n\t\t\t\t\t\turl: endpoint,\n\t\t\t\t\t\tmethod: requestMethod\n\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif (body !== undefined) {\n\t\t\t\t\t\t\n\t\t\t\t\t\topts.json = true;\n\t\t\t\t\t\topts.body = body;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (token !== undefined) opts.headers = { \"Authorization\": \"Bearer \" + token };\n\t\t\t\t\t\n\t\t\t\t\trequest(opts, (error: any, response: any, body: any) => {\n\t\t\t\t\t\n\t\t\t\t\t\tresolve(new S2APIResponse(body, response.statusCode));\n\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t);\n\t\t\n\t}\n\t\n}"]}